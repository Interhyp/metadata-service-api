/*
Metadata

Obtain and manage metadata for owners, services, repositories. Please see [README](https://github.com/Interhyp/metadata-service/blob/main/README.md) for details. **CLIENTS MUST READ!**

API version: v1
Contact: somebody@some-organisation.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostPromote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostPromote{}

// PostPromote struct for PostPromote
type PostPromote struct {
	Binaries []Binary `json:"binaries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostPromote PostPromote

// NewPostPromote instantiates a new PostPromote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPromote() *PostPromote {
	this := PostPromote{}
	return &this
}

// NewPostPromoteWithDefaults instantiates a new PostPromote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPromoteWithDefaults() *PostPromote {
	this := PostPromote{}
	return &this
}

// GetBinaries returns the Binaries field value if set, zero value otherwise.
func (o *PostPromote) GetBinaries() []Binary {
	if o == nil || IsNil(o.Binaries) {
		var ret []Binary
		return ret
	}
	return o.Binaries
}

// GetBinariesOk returns a tuple with the Binaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPromote) GetBinariesOk() ([]Binary, bool) {
	if o == nil || IsNil(o.Binaries) {
		return nil, false
	}
	return o.Binaries, true
}

// HasBinaries returns a boolean if a field has been set.
func (o *PostPromote) HasBinaries() bool {
	if o != nil && !IsNil(o.Binaries) {
		return true
	}

	return false
}

// SetBinaries gets a reference to the given []Binary and assigns it to the Binaries field.
func (o *PostPromote) SetBinaries(v []Binary) {
	o.Binaries = v
}

func (o PostPromote) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostPromote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Binaries) {
		toSerialize["binaries"] = o.Binaries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostPromote) UnmarshalJSON(data []byte) (err error) {
	varPostPromote := _PostPromote{}

	err = json.Unmarshal(data, &varPostPromote)

	if err != nil {
		return err
	}

	*o = PostPromote(varPostPromote)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "binaries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostPromote struct {
	value *PostPromote
	isSet bool
}

func (v NullablePostPromote) Get() *PostPromote {
	return v.value
}

func (v *NullablePostPromote) Set(val *PostPromote) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPromote) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPromote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPromote(val *PostPromote) *NullablePostPromote {
	return &NullablePostPromote{value: val, isSet: true}
}

func (v NullablePostPromote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPromote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


